# gym_trainer_bot/services/gsheets_client_service.py

import json
import os
from datetime import datetime
from gsheets_config.sheets_pool import SHEETS_POOL

class GoogleSheetsClientService:
    def __init__(self):
        self.storage_file = "user_sheets.json"
        self.used_sheets = self._load_used_sheets()
        print(f"‚úÖ –°–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ó–∞–Ω—è—Ç–æ —Ç–∞–±–ª–∏—Ü: {len(self.used_sheets)}")
    
    def _load_used_sheets(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–Ω—è—Ç—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –∏–∑ —Ñ–∞–π–ª–∞"""
        try:
            if os.path.exists(self.storage_file):
                with open(self.storage_file, 'r', encoding='utf-8') as f:
                    return json.load(f)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return {}
    
    def _save_used_sheets(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –∑–∞–Ω—è—Ç—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö –≤ —Ñ–∞–π–ª"""
        try:
            with open(self.storage_file, 'w', encoding='utf-8') as f:
                json.dump(self.used_sheets, f, ensure_ascii=False, indent=2)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
    
    def _get_available_sheet(self):
        """–ù–∞—Ö–æ–¥–∏—Ç —Å–≤–æ–±–æ–¥–Ω—É—é —Ç–∞–±–ª–∏—Ü—É –∏–∑ –ø—É–ª–∞"""
        used_ids = {data['spreadsheet_id'] for data in self.used_sheets.values()}
        
        for sheet_info in SHEETS_POOL:
            if sheet_info['id'] not in used_ids:
                return sheet_info
        return None
    
    async def create_client_spreadsheet(self, user_id: int, username: str, full_name: str):
        """–ù–∞–∑–Ω–∞—á–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ"""
        try:
            print(f"üîÑ –ù–∞–∑–Ω–∞—á–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è {user_id} ({full_name})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–±–ª–∏—Ü—ã —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if str(user_id) in self.used_sheets:
                print("‚ö†Ô∏è –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü–∞")
                return self.used_sheets[str(user_id)]
            
            # –ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω—É—é —Ç–∞–±–ª–∏—Ü—É
            sheet_info = self._get_available_sheet()
            
            if not sheet_info:
                print("‚ùå –ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –≤ –ø—É–ª–µ")
                return None
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å
            result = {
                'spreadsheet_id': sheet_info['id'],
                'spreadsheet_url': sheet_info['url'],
                'user_id': user_id,
                'username': username,
                'full_name': full_name,
                'assigned_name': f"–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ - {full_name}",
                'original_name': sheet_info['original_name'],
                'assigned_at': datetime.now().strftime("%d.%m.%Y %H:%M"),
                'note': 'üí° –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –∏ –Ω–∞—á–∏–Ω–∞–π—Ç–µ –≤–Ω–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫!'
            }
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–∞–º—è—Ç—å –∏ –≤ —Ñ–∞–π–ª
            self.used_sheets[str(user_id)] = result
            self._save_used_sheets()
            
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {sheet_info['url']}")
            return result
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã: {e}")
            return None
    
    async def get_client_sheet(self, user_id: int):
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–∞–±–ª–∏—Ü–µ –∫–ª–∏–µ–Ω—Ç–∞"""
        return self.used_sheets.get(str(user_id))
    
    def get_all_client_sheets(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å–µ –∑–∞–Ω—è—Ç—ã–µ —Ç–∞–±–ª–∏—Ü—ã (–¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞)"""
        return self.used_sheets
    
    def get_pool_status(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—É–ª–∞ —Ç–∞–±–ª–∏—Ü"""
        total = len(SHEETS_POOL)
        used = len(self.used_sheets)
        free = total - used
        
        status = {
            'total': total,
            'used': used,
            'free': free,
            'clients': []
        }
        
        for user_id, sheet_info in self.used_sheets.items():
            status['clients'].append({
                'user_id': user_id,
                'username': sheet_info.get('username', ''),
                'full_name': sheet_info.get('full_name', ''),
                'assigned_at': sheet_info.get('assigned_at', ''),
                'spreadsheet_url': sheet_info['spreadsheet_url']
            })
        
        return status

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
gsheets_client_service = GoogleSheetsClientService()