# gym_trainer_bot/handlers/training.py

import os
from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from services.gsheets_client_service import gsheets_client_service
from keyboards.main_menu import (
    get_main_keyboard, 
    get_training_main_keyboard,   # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ (–±–µ–∑ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥)
    get_training_back_keyboard    # –ú–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥
)

router = Router()

@router.message(F.text == "üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
async def training_main_handler(message: Message, state: FSMContext):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - –£–†–û–í–ï–ù–¨ 1"""
    await message.answer(
        "üí™ *–†–∞–∑–¥–µ–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_training_main_keyboard()  # –ë–µ–∑ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    )

@router.callback_query(F.data == "training_create_sheet")
async def create_spreadsheet_callback(callback: CallbackQuery):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É - –£–†–û–í–ï–ù–¨ 2"""
    user_id = callback.from_user.id
    username = callback.from_user.username
    full_name = callback.from_user.full_name
    
    await callback.message.edit_text("üîÑ –°–æ–∑–¥–∞—é —Ç–≤–æ—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É...")
    
    sheet_info = await gsheets_client_service.create_client_spreadsheet(
        user_id, username, full_name
    )
    
    if sheet_info:
        response = (
            f"üéâ *–¢–≤–æ—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞!*\n\n"
            f"üìä *–¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:*\n"
            f"üîó {sheet_info['spreadsheet_url']}\n\n"
            f"*–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:*\n"
            f"1. –û—Ç–∫—Ä–æ–π —Å—Å—ã–ª–∫—É –≤—ã—à–µ\n"
            f"2. –ù–∞—á–Ω–∏ –≤–Ω–æ—Å–∏—Ç—å —Å–≤–æ–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
            f"3. –°–æ—Ö—Ä–∞–Ω—è–π –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
            f"4. –¢—Ä–µ–Ω–µ—Ä –±—É–¥–µ—Ç –≤–∏–¥–µ—Ç—å —Ç–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n\n"
            f"üí° *–°–æ–≤–µ—Ç:* –í–Ω–æ—Å–∏ –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏!"
        )
    else:
        response = (
            "‚ùå *–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü.*\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Å—å —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞."
        )
    
    await callback.message.edit_text(
        response, 
        reply_markup=get_training_back_keyboard()  # –° –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    )

@router.callback_query(F.data == "training_my_sheet")
async def my_spreadsheet_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É - –£–†–û–í–ï–ù–¨ 2"""
    user_id = callback.from_user.id
    
    sheet_info = await gsheets_client_service.get_client_sheet(user_id)
    
    if sheet_info:
        response = (
            f"üìä *–¢–≤–æ—è —Ç–∞–±–ª–∏—Ü–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
            f"üë§ *–ö–ª–∏–µ–Ω—Ç:* {sheet_info.get('full_name', '')}\n"
            f"üìÖ *–ù–∞–∑–Ω–∞—á–µ–Ω–∞:* {sheet_info.get('assigned_at', '')}\n\n"
            f"üîó *–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–∞–±–ª–∏—Ü—É:*\n"
            f"{sheet_info['spreadsheet_url']}\n\n"
            f"üí° –ü—Ä–æ—Å—Ç–æ –æ—Ç–∫—Ä–æ–π —Å—Å—ã–ª–∫—É –∏ –≤–Ω–æ—Å–∏ —Å–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!"
        )
    else:
        response = (
            "‚ùå *–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.*\n\n"
            "–ù–∞–∂–º–∏ \"üÜï –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É\" —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É!"
        )
    
    await callback.message.edit_text(
        response, 
        reply_markup=get_training_back_keyboard()  # –° –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    )

@router.callback_query(F.data == "training_progress")
async def progress_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å - –£–†–û–í–ï–ù–¨ 2"""
    user_id = callback.from_user.id
    
    sheet_info = await gsheets_client_service.get_client_sheet(user_id)
    
    if sheet_info:
        response = (
            f"üìà *–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å*\n\n"
            f"üë§ *–ö–ª–∏–µ–Ω—Ç:* {sheet_info.get('full_name', '')}\n"
            f"üìÖ *–¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞:* {sheet_info.get('assigned_at', '')}\n\n"
            f"üìä *–¢–≤–æ—è —Ç–∞–±–ª–∏—Ü–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫:*\n"
            f"üîó {sheet_info['spreadsheet_url']}\n\n"
            f"üí° *–ß—Ç–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å:*\n"
            f"‚Ä¢ –†–æ—Å—Ç —Ä–∞–±–æ—á–∏—Ö –≤–µ—Å–æ–≤\n"
            f"‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–æ–¥—Ö–æ–¥–æ–≤/–ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π\n"
            f"‚Ä¢ –û–±—â—É—é –¥–∏–Ω–∞–º–∏–∫—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n\n"
            f"–û—Ç–∫—Ä—ã–≤–∞–π —Ç–∞–±–ª–∏—Ü—É –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å!"
        )
    else:
        response = (
            "üìà *–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å*\n\n"
            "–£ —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.\n\n"
            "–ù–∞–∂–º–∏ \"üÜï –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É\" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã!"
        )
    
    await callback.message.edit_text(
        response, 
        reply_markup=get_training_back_keyboard()  # –° –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    )

@router.callback_query(F.data == "training_help")
async def instruction_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é - –£–†–û–í–ï–ù–¨ 2"""
    instruction = (
        "üìù *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π:*\n\n"
        "1. *–û—Ç–∫—Ä–æ–π —Å–≤–æ—é —Ç–∞–±–ª–∏—Ü—É* —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É \"üìä –ú–æ—è —Ç–∞–±–ª–∏—Ü–∞\"\n"
        "2. *–í–Ω–æ—Å–∏ –¥–∞–Ω–Ω—ã–µ* –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:\n"
        "   - üìÖ *–î–∞—Ç–∞* —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
        "   - üèãÔ∏è *–£–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ*\n"
        "   - üî¢ *–ü–æ–¥—Ö–æ–¥—ã* –∏ *–ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è*\n"
        "   - ‚öñÔ∏è *–†–∞–±–æ—á–∏–π –≤–µ—Å*\n"
        "   - üí≠ *–ü—Ä–∏–º–µ—á–∞–Ω–∏—è* (—Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ, —Ç–µ—Ö–Ω–∏–∫–∞)\n\n"
        "3. *–¢—Ä–µ–Ω–µ—Ä –≤–∏–¥–∏—Ç* —Ç–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –∏ –º–æ–∂–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É\n"
        "4. *–í—Å–µ –¥–∞–Ω–Ω—ã–µ* —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ Google Sheets\n\n"
        "üí° *–°–æ–≤–µ—Ç—ã:*\n"
        "‚Ä¢ –í–Ω–æ—Å–∏ –¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
        "‚Ä¢ –ë—É–¥—å —á–µ—Å—Ç–µ–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏\n"
        "‚Ä¢ –û—Ç–º–µ—á–∞–π —Å–≤–æ–µ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ"
    )
    
    await callback.message.edit_text(
        instruction, 
        reply_markup=get_training_back_keyboard()  # –° –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    )

@router.callback_query(F.data == "training_back_to_main")
async def back_to_training_main(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ - –∏–∑ –£–†–û–í–ù–Ø 2 –≤ –£–†–û–í–ï–ù–¨ 1"""
    await callback.message.edit_text(
        "üí™ *–†–∞–∑–¥–µ–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_training_main_keyboard()  # –ë–µ–∑ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    )

@router.callback_query(F.data == "main_menu")
async def back_to_main_menu(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ - –∏–∑ –£–†–û–í–ù–Ø 1"""
    await callback.message.edit_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
        reply_markup=get_main_keyboard()
    )

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
@router.message(Command("clients"))
async def show_clients(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –∏—Ö —Ç–∞–±–ª–∏—Ü—ã (–¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞)"""
    status = gsheets_client_service.get_pool_status()
    
    response = f"üìä *–°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–æ–≤*\n\n"
    response += f"‚Ä¢ –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü: {status['total']}\n"
    response += f"‚Ä¢ –ó–∞–Ω—è—Ç–æ: {status['used']}\n"
    response += f"‚Ä¢ –°–≤–æ–±–æ–¥–Ω–æ: {status['free']}\n\n"
    
    if status['clients']:
        response += "*–ö–ª–∏–µ–Ω—Ç—ã:*\n"
        for client in status['clients']:
            response += f"üë§ {client['full_name']} (@{client['username']})\n"
            response += f"   üìÖ {client['assigned_at']}\n"
            response += f"   üîó {client['spreadsheet_url']}\n\n"
    else:
        response += "–ü–æ–∫–∞ –Ω–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å —Ç–∞–±–ª–∏—Ü–∞–º–∏."
    
    await message.answer(response)