from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from utils.google_sheets import sheets_manager
from database import get_training_sheet_url, save_training_sheet_url
from keyboards.main_menu import get_training_keyboard, get_main_keyboard
from utils.bot_instance import bot
from aiogram.utils.keyboard import InlineKeyboardBuilder

router = Router()

class TrainingStates(StatesGroup):
    waiting_for_exercise_data = State()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏" –∏–∑ Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
@router.message(F.text == "üèãÔ∏è –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏")
async def handle_training_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    user_id = message.from_user.id
    user_name = message.from_user.full_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–∞–±–ª–∏—Ü–∞
    sheet_url = await get_training_sheet_url(user_id)
    
    if not sheet_url:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        sheet_url = sheets_manager.create_training_spreadsheet(user_id, user_name)
        if sheet_url:
            await save_training_sheet_url(user_id, sheet_url)
    
    text = (
        "üèãÔ∏è *–°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
        "üìä –í–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π Google —Ç–∞–±–ª–∏—Ü–µ\n\n"
        "*–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–µ–ª–∞—Ç—å:*\n"
        "‚Ä¢ üìù –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤–µ—Å–∞ –∏ –ø–æ–¥—Ö–æ–¥—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
        "‚Ä¢ üìà –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –≥—Ä–∞—Ñ–∏–∫–∞–º\n"
        "‚Ä¢ üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º\n"
        "‚Ä¢ üí™ –ü–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n\n"
        "*–¢—Ä–µ–Ω–µ—Ä –≤–∏–¥–∏—Ç –≤—Å–µ –≤–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏!*"
    )
    
    await message.answer(text, reply_markup=get_training_keyboard())

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∫–Ω–æ–ø–æ–∫ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
@router.callback_query(F.data == "training_my_sheet")
async def training_my_sheet(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = callback.from_user.id
    sheet_url = await get_training_sheet_url(user_id)
    
    if sheet_url:
        text = (
            "üìä *–í–∞—à–∞ —Ç–∞–±–ª–∏—Ü–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
            f"üîó *–°—Å—ã–ª–∫–∞:* {sheet_url}\n\n"
            "*–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:*\n"
            "1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –ø–æ —Å—Å—ã–ª–∫–µ –≤—ã—à–µ\n"
            "2. –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–π –¥–µ–Ω—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
            "3. –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤–µ—Å–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞\n"
            "4. –¢—Ä–µ–Ω–µ—Ä —É–≤–∏–¥–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ä–∞–∑—É!\n\n"
            "*üí° –°–æ–≤–µ—Ç:* –î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –≤ –∑–∞–∫–ª–∞–¥–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üìä –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É", url=sheet_url)
        builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="training_back")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup())
    else:
        await callback.message.edit_text(
            "‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ '–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É'",
            reply_markup=get_training_keyboard()
        )
    
    await callback.answer()

@router.callback_query(F.data == "training_create_sheet")
async def training_create_sheet(callback: CallbackQuery):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"""
    user_id = callback.from_user.id
    user_name = callback.from_user.full_name
    
    await callback.message.edit_text("üîÑ –°–æ–∑–¥–∞—é –≤–∞—à—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫...")
    
    sheet_url = sheets_manager.create_training_spreadsheet(user_id, user_name)
    
    if sheet_url:
        await save_training_sheet_url(user_id, sheet_url)
        
        text = (
            "‚úÖ *–¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞!*\n\n"
            "üìä –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!\n\n"
            "*–ß—Ç–æ —Ç–µ–ø–µ—Ä—å –¥–µ–ª–∞—Ç—å:*\n"
            "1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ\n"
            "2. –¢—Ä–µ–Ω–µ—Ä —É–∂–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—à—É –ø—Ä–æ–≥—Ä–∞–º–º—É\n"
            "3. –ó–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤–µ—Å–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞\n"
            "4. –¢—Ä–µ–Ω–µ—Ä –±—É–¥–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å\n\n"
            "*üîí –î–æ—Å—Ç—É–ø –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —É –≤–∞—Å –∏ —Ç—Ä–µ–Ω–µ—Ä–∞!*"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üìä –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É", url=sheet_url)
        builder.button(text="üí™ –ü–æ–Ω—è—Ç–Ω–æ", callback_data="training_back")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup())
    else:
        await callback.message.edit_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ç—Ä–µ–Ω–µ—Ä–æ–º.",
            reply_markup=get_training_keyboard()
        )
    
    await callback.answer()

@router.callback_query(F.data == "training_help")
async def training_help(callback: CallbackQuery):
    """–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"""
    text = (
        "üìñ *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Å–∏—Å—Ç–µ–º–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
        "*1. üìä –í–∞—à–∞ —Ç–∞–±–ª–∏—Ü–∞:*\n"
        "‚Ä¢ –£ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤–æ—è –ª–∏—á–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞\n"
        "‚Ä¢ –¢—Ä–µ–Ω–µ—Ä –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫\n"
        "‚Ä¢ –í—ã –≤–∏–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ\n\n"
        "*2. üìù –ö–∞–∫ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å:*\n"
        "‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π\n"
        "‚Ä¢ –ù–∞–π–¥–∏—Ç–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –Ω–∞ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å\n"
        "‚Ä¢ –í —Å—Ç–æ–ª–±—Ü–∞—Ö '–ü–æ–¥—Ö–æ–¥ 1-4' –∑–∞–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤–µ—Å\n"
        "‚Ä¢ –í '–ü—Ä–∏–º–µ—á–∞–Ω–∏—è' –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏\n\n"
        "*3. üëÅÔ∏è‚Äçüó®Ô∏è –ö–æ–Ω—Ç—Ä–æ–ª—å —Ç—Ä–µ–Ω–µ—Ä–∞:*\n"
        "‚Ä¢ –¢—Ä–µ–Ω–µ—Ä –≤–∏–¥–∏—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
        "‚Ä¢ –ú–æ–∂–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –æ–Ω–ª–∞–π–Ω\n"
        "‚Ä¢ –°–ª–µ–¥–∏—Ç –∑–∞ –≤–∞—à–∏–º –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º\n\n"
        "*4. üí° –°–æ–≤–µ—Ç—ã:*\n"
        "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Å—Å—ã–ª–∫—É –≤ –∑–∞–∫–ª–∞–¥–∫–∞—Ö\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n"
        "‚Ä¢ –ù–µ —É–¥–∞–ª—è–π—Ç–µ –∏ –Ω–µ –º–µ–Ω—è–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏—è —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π"
    )
    
    builder = InlineKeyboardBuilder()
    builder.button(text="üìä –û—Ç–∫—Ä—ã—Ç—å –º–æ—é —Ç–∞–±–ª–∏—Ü—É", callback_data="training_my_sheet")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="training_back")
    builder.adjust(1)
    
    await callback.message.edit_text(text, reply_markup=builder.as_markup())
    await callback.answer()

@router.callback_query(F.data == "training_progress")
async def training_progress(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"""
    user_id = callback.from_user.id
    
    text = (
        "üìà *–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
        "*–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:*\n"
        "‚Ä¢ üèãÔ∏è –ñ–∏–º –ª–µ–∂–∞: 80–∫–≥ √ó 8 –ø–æ–≤—Ç. (+5–∫–≥ –∑–∞ –º–µ—Å—è—Ü)\n"
        "‚Ä¢ ü¶µ –ü—Ä–∏—Å–µ–¥–∞–Ω–∏—è: 100–∫–≥ √ó 6 –ø–æ–≤—Ç. (+10–∫–≥)\n"
        "‚Ä¢ üìä –°—Ç–∞–Ω–æ–≤–∞—è: 120–∫–≥ √ó 4 –ø–æ–≤—Ç. (+15–∫–≥)\n\n"
        "*üìÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–∞ –Ω–µ–¥–µ–ª—é:*\n"
        "‚Ä¢ –ü–Ω: –ì—Ä—É–¥—å, –¢—Ä–∏—Ü–µ–ø—Å\n"
        "‚Ä¢ –°—Ä: –°–ø–∏–Ω–∞, –ë–∏—Ü–µ–ø—Å\n"
        "‚Ä¢ –ü—Ç: –ù–æ–≥–∏, –ü–ª–µ—á–∏\n\n"
        "*üìä –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É*"
    )
    
    sheet_url = await get_training_sheet_url(user_id)
    builder = InlineKeyboardBuilder()
    
    if sheet_url:
        builder.button(text="üìä –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É", url=sheet_url)
    builder.button(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="training_progress")
    builder.button(text="üîô –ù–∞–∑–∞–¥", callback_data="training_back")
    builder.adjust(1)
    
    await callback.message.edit_text(text, reply_markup=builder.as_markup())
    await callback.answer()

@router.callback_query(F.data == "training_start")
async def training_start(callback: CallbackQuery):
    """–ù–∞—á–∞–ª–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"""
    user_id = callback.from_user.id
    sheet_url = await get_training_sheet_url(user_id)
    
    if sheet_url:
        text = (
            "üí™ *–ù–∞—á–∏–Ω–∞–µ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É!*\n\n"
            "*–ü–ª–∞–Ω –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:*\n"
            "‚Ä¢ –†–∞–∑–º–∏–Ω–∫–∞: 5-10 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –û—Å–Ω–æ–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è (—Å–º. —Ç–∞–±–ª–∏—Ü—É)\n"
            "‚Ä¢ –ó–∞–º–∏–Ω–∫–∞: 5 –º–∏–Ω—É—Ç\n\n"
            "*üìù –ù–µ –∑–∞–±—É–¥—å—Ç–µ:*\n"
            "‚Ä¢ –ó–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤–µ—Å–∞ –≤ —Ç–∞–±–ª–∏—Ü—É\n"
            "‚Ä¢ –°–ª–µ–¥–∏—Ç—å –∑–∞ —Ç–µ—Ö–Ω–∏–∫–æ–π\n"
            "‚Ä¢ –ü–∏—Ç—å –≤–æ–¥—É –≤–æ –≤—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏\n\n"
            "üìä *–û—Ç–∫—Ä–æ–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π*"
        )
        
        builder = InlineKeyboardBuilder()
        builder.button(text="üìä –û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É", url=sheet_url)
        builder.button(text="‚úÖ –ù–∞—á–∞–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data="training_back")
        builder.adjust(1)
        
        await callback.message.edit_text(text, reply_markup=builder.as_markup())
    else:
        await callback.message.edit_text(
            "‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫",
            reply_markup=get_training_keyboard()
        )
    
    await callback.answer()

@router.callback_query(F.data == "training_back")
async def training_back(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫"""
    user_id = callback.from_user.id
    user_name = callback.from_user.full_name
    
    sheet_url = await get_training_sheet_url(user_id)
    
    text = (
        "üèãÔ∏è *–°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫*\n\n"
        "üìä –í–∞—à–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π Google —Ç–∞–±–ª–∏—Ü–µ\n\n"
        "*–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:*"
    )
    
    await callback.message.edit_text(text, reply_markup=get_training_keyboard())
    await callback.answer()

@router.callback_query(F.data == "main_menu")
async def back_to_main(callback: CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.message.edit_text(
        "üîô –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:"
    )
    await callback.message.answer(
        "üè† *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*", 
        reply_markup=get_main_keyboard()
    )
    await callback.answer()